cqlsh> CREATE KEYSPACE Employee with replication={'class':'SimpleStrategy', 'replication_factor':1};
cqlsh> DESCRIBE Employee;

CREATE KEYSPACE employee WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'}  AND durable_writes = true;

cqlsh> USE Employee;
cqlsh:employee> CREATE TABLE employee_info (emp_id int primary key, emp_name text, designation text, doj timestamp, salary double, dept_name text);
cqlsh:employee> DESCRIBE TABLE employee_info;

CREATE TABLE employee.employee_info (
    emp_id int PRIMARY KEY,
    dept_name text,
    designation text,
    doj timestamp,
    emp_name text,
    salary double
) WITH additional_write_policy = '99p'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND cdc = false
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '16', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND extensions = {}
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99p';

cqlsh:employee> BEGIN BATCH
            ... INSERT INTO employee_info (emp_id, emp_name, designation, doj, salary, dept_name) VALUES (031, 'David Sheen', 'Developer', '2019-02-11', 86000.00, 'Development')
            ... INSERT INTO employee_info (emp_id, emp_name, designation, doj, salary, dept_name) VALUES (130, 'Sara Sheen', 'Developer', '2019-03-11', 96000.00, 'Development')
            ... INSERT INTO employee_info (emp_id, emp_name, designation, doj, salary, dept_name) VALUES (121, 'Maria DS', 'Manager', '2018-02-11', 186000.00, 'Sales')
            ... APPLY BATCH;
cqlsh:employee> SELECT * from employee_info;

 emp_id | dept_name   | designation | doj                             | emp_name    | salary
--------+-------------+-------------+---------------------------------+-------------+----------
    130 | Development |   Developer | 2019-03-11 00:00:00.000000+0000 |  Sara Sheen |    96000
    121 |       Sales |     Manager | 2018-02-11 00:00:00.000000+0000 |    Maria DS | 1.86e+05
     31 | Development |   Developer | 2019-02-11 00:00:00.000000+0000 | David Sheen |    86000

(3 rows)

cqlsh:employee> UPDATE employee_info SET emp_name='Maria DSA', dept_name='Management' WHERE emp_id=121;
cqlsh:employee> SELECT * FROM employee_info;

 emp_id | dept_name   | designation | doj                             | emp_name    | salary
--------+-------------+-------------+---------------------------------+-------------+----------
    130 | Development |   Developer | 2019-03-11 00:00:00.000000+0000 |  Sara Sheen |    96000
    121 |  Management |     Manager | 2018-02-11 00:00:00.000000+0000 |   Maria DSA | 1.86e+05
     31 | Development |   Developer | 2019-02-11 00:00:00.000000+0000 | David Sheen |    86000

cqlsh:Employee> SELECT * from employee_info ORDER BY Salary;
InvalidRequest: Error from server: code=2200 [Invalid query] message="ORDER BY is only supported when the partition key is restricted by an EQ or an IN."

(3 rows)
cqlsh:employee> ALTER TABLE employee_info ADD projects set<text>;
cqlsh:employee> SELECT * FROM employee_info;

 emp_id | dept_name   | designation | doj                             | emp_name    | projects | salary
--------+-------------+-------------+---------------------------------+-------------+----------+----------
    130 | Development |   Developer | 2019-03-11 00:00:00.000000+0000 |  Sara Sheen |     null |    96000
    121 |  Management |     Manager | 2018-02-11 00:00:00.000000+0000 |   Maria DSA |     null | 1.86e+05
     31 | Development |   Developer | 2019-02-11 00:00:00.000000+0000 | David Sheen |     null |    86000

(3 rows)
cqlsh:employee> UPDATE employee_info SET projects={'LMS', 'Notin'} WHERE emp_id=121;
cqlsh:employee> UPDATE employee_info SET projects={'ECommerce', 'Gadgets Site', 'Travel Blog'} WHERE emp_id=031;cqlsh:employee>
cqlsh:employee> UPDATE employee_info SET projects={'E-Commerce', 'Journal Blog'} WHERE emp_id=130;
cqlsh:employee> SELECT * FROM employee_info;

 emp_id | dept_name   | designation | doj                             | emp_name    | projects                                     | salary
--------+-------------+-------------+---------------------------------+-------------+----------------------------------------------+----------
    130 | Development |   Developer | 2019-03-11 00:00:00.000000+0000 |  Sara Sheen |               {'E-Commerce', 'Journal Blog'} |    96000
    121 |  Management |     Manager | 2018-02-11 00:00:00.000000+0000 |   Maria DSA |                             {'LMS', 'Notin'} | 1.86e+05
     31 | Development |   Developer | 2019-02-11 00:00:00.000000+0000 | David Sheen | {'ECommerce', 'Gadgets Site', 'Travel Blog'} |    86000

(3 rows)

cqlsh:Employee> BEGIN BATCH
            ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name,projects) VALUES(124,'Joe','Intern','2021-03-20',25000,'IT',{'LMS'}) USING TTL 15
            ... APPLY BATCH;

cqlsh:Employee> SELECT * FROM employee_info;
 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects                                        | salary
--------+---------------------------------+-----------+--------------------+----------+-------------------------------------------------+--------
    124 | 2021-03-20 00:00:00.000000+0000 |        IT |             Intern |      Joe |                                         {'LMS'} |  25000
    123 | 2020-05-25 00:00:00.000000+0000 |     Sales |            Manager |     John | {'ad management sys', 'sales improvement proj'} |  65000
    122 | 2020-04-16 00:00:00.000000+0000 |        IT |    Software Tester |     Jane |                     {'company website testing'} |  70000
    121 | 2021-03-16 00:00:00.000000+0000 |  Software | Software Developer |     Rosy |  {'Employee management app', 'company website'} |  80000

(4 rows)

cqlsh:Employee> SELECT * FROM employee_info;
 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects                                        | salary
--------+---------------------------------+-----------+--------------------+----------+-------------------------------------------------+--------
    123 | 2020-05-25 00:00:00.000000+0000 |     Sales |            Manager |     John | {'ad management sys', 'sales improvement proj'} |  65000
    122 | 2020-04-16 00:00:00.000000+0000 |        IT |    Software Tester |     Jane |                     {'company website testing'} |  70000
    121 | 2021-03-16 00:00:00.000000+0000 |  Software | Software Developer |     Rosy |  {'Employee management app', 'company website'} |  80000

(3 rows)